			  Z80 ASSEMBLER - ZASM VER 1.6
                      	;ロポコ(体験版)対応(多分、データブロックのみのCMT WRITE、READ汎用)
                      	;インフォメーションブロックのWRITE、READがCALLされずにデータブロックのWRITE、READだけ行われるアプリケーションに対応。
                      	;
                      	;データブロックWTITE 呼び出し時
                      	;  IFBのFNAMEをDOSファイル名としてArduinoへ送信(ファイルを作成)し、IFB 128ByteをArduinoへ送信(書出し)
                      	;  IFBのSTART ADDRESSからFILE SIZE分のデータをメモリから読み出してArduinoへ送信(書出し)
                      	;
                      	;データブロックREAD 呼び出し時
                      	;  IFBのFNAMEをDOSファイル名としてArduinoへ送信(ファイルオープン)、IFB 128ByteをArduinoから空受信(受信して廃棄)
                      	;  IFBのFILE SIZE分のデータをArduinoから受信し、START ADDRESSからのメモリへ書き込み
                      	;
  0006                	LETLN		EQU		0006H
  0015                	MSGPR		EQU		0015H
  03C3                	PRTBYT		EQU		03C3H
  10F0                	IBUFE		EQU		10F0H
  10F1                	FNAME		EQU		10F1H
  1102                	FSIZE		EQU		1102H
  1104                	SADRS		EQU		1104H
                      	
                      	;0D8H PORTA 送信データ(下位4ビット)
                      	;0D9H PORTB 受信データ(8ビット)
                      	;
                      	;0DAH PORTC Bit
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;0DBH コントロールレジスタ
                      	
                      	
  F000                	       ORG		0F000H
                      	
  F000  00            			NOP                   ;ROM識別コード
  F001  C313F0        			JP		START
                      	;******************** MONITOR CMTルーチン代替 *************************************
  F004  C3B6F0        	ENT1:	JP		MSHED
  F007  C304F1        	ENT2:	JP		MSDAT
  F00A  C33BF1        	ENT3:	JP		MLHED
  F00D  C382F1        	ENT4:	JP		MLDAT
  F010  C3C7F1        	ENT5:	JP		MVRFY
                      	
                      			
  F013  C30000        	START:		JP	0000H
                      	
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  F016  3E8A          	INIT:	LD		A,8AH
  F018  D3DB          			OUT		(0DBH),A
                      	;出力BITをリセット
  F01A  3E00          	INIT2:	LD		A,00H      ;PORTA <- 0
  F01C  D3D8          			OUT		(0D8H),A
  F01E  D3DA          			OUT		(0DAH),A   ;PORTC <- 0
  F020  C9            			RET
                      	
                      	;データ受信
  F021  ED5B0211      	DBRCV:	LD		DE,(FSIZE)
  F025  2A0411        			LD		HL,(SADRS)
  F028  CD33F0        	DBRLOP:	CALL	RCVBYTE
  F02B  77            			LD		(HL),A
  F02C  1B            			DEC		DE
  F02D  7A            			LD		A,D
  F02E  B3            			OR		E
  F02F  23            			INC		HL
  F030  20F6          			JR		NZ,DBRLOP   ;DE=0までLOOP
  F032  C9            			RET
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  F033                	RCVBYTE:
  F033  CD68F0        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  F036  DBD9          			IN		A,(0D9h)   ;PORTB -> A
  F038  F5            			PUSH 	AF
  F039  3E05          			LD		A,05H
  F03B  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 1
  F03D  CD6FF0        			CALL	F2CHK      ;PORTC BIT7が0になるまでLOOP
  F040  3E04          			LD		A,04H
  F042  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 0
  F044  F1            			POP 	AF
  F045  C9            			RET
                      			
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  F046                	SNDBYTE:
  F046  F5            			PUSH	AF
  F047  1F            			RRA
  F048  1F            			RRA
  F049  1F            			RRA
  F04A  1F            			RRA
  F04B  E60F          			AND		0FH
  F04D  CD57F0        			CALL	SND4BIT
  F050  F1            			POP		AF
  F051  E60F          			AND		0FH
  F053  CD57F0        			CALL	SND4BIT
  F056  C9            			RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  F057                	SND4BIT:
  F057  D3D8          			OUT		(0D8H),A
  F059  3E05          			LD		A,05H
  F05B  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 1
  F05D  CD68F0        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  F060  3E04          			LD		A,04H
  F062  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 0
  F064  CD6FF0        			CALL	F2CHK
  F067  C9            			RET
                      			
                      	;**** BUSYをCHECK(1) ****
                      	; 82H BIT7が1になるまでLOP
  F068  DBDA          	F1CHK:	IN		A,(0DAH)
  F06A  E680          			AND		80H        ;PORTC BIT7 = 1?
  F06C  28FA          			JR		Z,F1CHK
  F06E  C9            			RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 82H BIT7が0になるまでLOOP
  F06F  DBDA          	F2CHK:	IN		A,(0DAH)
  F071  E680          			AND		80H        ;PORTC BIT7 = 0?
  F073  20FA          			JR		NZ,F2CHK
  F075  C9            			RET
                      	
                      	;******** MESSAGE DATA ********************
  F076                	WRMSG:
  F076  57524954494E47			DB		'WRITING '
  F07E  0D            			DB		0DH
                      	
  F07F                	LDMSG:
  F07F  4C4F4144494E47			DB		'LOADING '
  F087  0D            			DB		0DH
                      	
  F088                	MSG_F0:
  F088  53442D43415244			DB		'SD-CARD INITIALIZE ERROR'
  F0A0  0D            			DB		0DH
                      			
  F0A1                	MSG_F1:
  F0A1  4E4F542046494E			DB		'NOT FIND FILE'
  F0AE  0D            			DB		0DH
                      			
  F0AF                	MSG99:
  F0AF  204552524F52  			DB		' ERROR'
  F0B5  0D            			DB		0DH
                      			
                      	;*********************** 0436H MONITOR ライト インフォメーション代替処理 ************
  F0B6                	MSHED:
  F0B6  F3            			DI
  F0B7  D5            			PUSH	DE
  F0B8  C5            			PUSH	BC
  F0B9  E5            			PUSH	HL
  F0BA  CD16F0        			CALL	INIT
  F0BD  3E91          			LD		A,91H      ;HEADER SAVEコマンド91H
  F0BF  CDCEF1        			CALL	MCMD       ;コマンドコード送信
  F0C2  A7            			AND		A          ;00以外ならERROR
  F0C3  C2DAF1        			JP		NZ,MERR
                      	
                      	;S-OS SWORD、8080用テキスト・エディタ＆アセンブラはファイルネームの後ろが20h詰めとなるため0dhに修正
  F0C6  0611          			LD		B,11H
  F0C8  210111        			LD		HL,FNAME+10H     ;ファイルネーム
  F0CB  3E0D          			LD		A,0DH            ;17文字目には常に0DHをセットする
  F0CD  77            			LD		(HL),A
  F0CE  7E            	MSH0:	LD		A,(HL)
  F0CF  FE0D          			CP		0DH              ;0DHであればひとつ前の文字の検査に移る
  F0D1  2807          			JR		Z,MSH1
  F0D3  FE20          			CP		20H              ;20Hであれば0DHをセットしてひとつ前の文字の検査に移る
  F0D5  2007          			JR		NZ,MSH2          ;0DH、20H以外の文字であれば終了
  F0D7  3E0D          			LD		A,0DH
  F0D9  77            			LD		(HL),A
                      			
  F0DA  2B            	MSH1:	DEC		HL
  F0DB  05            			DEC		B
  F0DC  20F0          			JR		NZ,MSH0
                      	
  F0DE  CD0600        	MSH2:	CALL	LETLN
  F0E1  1176F0        			LD		DE,WRMSG   ;'WRITING '
  F0E4  CD1500        			CALL	MSGPR        ;メッセージ表示
  F0E7  11F110        			LD		DE,FNAME     ;ファイルネーム
  F0EA  CD1500        			CALL	MSGPR       ;メッセージ表示
                      	
  F0ED  21F010        			LD		HL,IBUFE
  F0F0  0680          			LD		B,80H
  F0F2  7E            	MSH3:	LD		A,(HL)     ;インフォメーション ブロック送信
  F0F3  CD46F0        			CALL	SNDBYTE
  F0F6  23            			INC		HL
  F0F7  05            			DEC		B
  F0F8  20F8          			JR		NZ,MSH3
                      	
  F0FA  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F0FD  A7            			AND		A          ;00以外ならERROR
  F0FE  C2DAF1        			JP		NZ,MERR
                      	
  F101  C3D5F1        			JP		MRET       ;正常RETURN
                      	
                      	;******************** 0475H MONITOR ライト データ代替処理 **********************
  F104                	MSDAT:
  F104  F3            			DI
                      	;MZTファイル「ROPOKO.MZT」に保存
  F105  CDB6F0        			CALL	MSHED
                      	
  F108  D5            			PUSH	DE
  F109  C5            			PUSH	BC
  F10A  E5            			PUSH	HL
  F10B  3E92          			LD		A,92H      ;DATA SAVEコマンド92H
  F10D  CDCEF1        			CALL	MCMD       ;コマンドコード送信
  F110  A7            			AND		A          ;00以外ならERROR
  F111  C2DAF1        			JP		NZ,MERR
                      	
  F114  210211        			LD		HL,FSIZE   ;FSIZE送信
  F117  7E            			LD		A,(HL)
  F118  CD46F0        			CALL	SNDBYTE
  F11B  23            			INC		HL
  F11C  7E            			LD		A,(HL)
  F11D  CD46F0        			CALL	SNDBYTE
                      	
  F120  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F123  A7            			AND		A          ;00以外ならERROR
  F124  C2DAF1        			JP		NZ,MERR
                      	
  F127  ED5B0211      			LD		DE,(FSIZE)
  F12B  2A0411        			LD		HL,(SADRS)
  F12E  7E            	MSD1:	LD		A,(HL)
  F12F  CD46F0        			CALL	SNDBYTE      ;SADRSからFSIZE Byteを送信。分割セーブの場合、直前に0436HでOPENされたファイルを対象として256バイトずつ0475HがCALLされる。
  F132  1B            			DEC		DE
  F133  7A            			LD		A,D
  F134  B3            			OR		E
  F135  23            			INC		HL
  F136  20F6          			JR		NZ,MSD1
                      			
  F138  C3D5F1        			JP		MRET       ;正常RETURN
                      	
                      	;************************** 04D8H MONITOR リード インフォメーション代替処理 *****************
  F13B                	MLHED:
  F13B  F3            			DI
  F13C  D5            			PUSH	DE
  F13D  C5            			PUSH	BC
  F13E  E5            			PUSH	HL
  F13F  CD16F0        			CALL	INIT
                      	
  F142  3E93          			LD		A,93H      ;HEADER LOADコマンド93H
  F144  CDCEF1        			CALL	MCMD       ;コマンドコード送信
  F147  A7            			AND		A          ;00以外ならERROR
  F148  C2DAF1        			JP		NZ,MERR
                      	
  F14B  11F110        			LD		DE,FNAME
  F14E  0610          	MLH2:	LD		B,10H
  F150  1A            	MLH4:	LD		A,(DE)     ;FNAME送信
  F151  CD46F0        			CALL	SNDBYTE
  F154  13            			INC		DE
  F155  05            			DEC		B
  F156  20F8          			JR		NZ,MLH4
                      	
  F158  0611          			LD		B,11H
  F15A  3E0D          			LD		A,0DH
  F15C  CD46F0        	MLH3:	CALL	SNDBYTE
  F15F  05            			DEC		B
  F160  20FA          			JR		NZ,MLH3
                      	
  F162  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F165  A7            			AND		A          ;00以外ならERROR
  F166  C2DAF1        			JP		NZ,MERR
                      	
  F169  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F16C  A7            			AND		A          ;00以外ならERROR
  F16D  C2DAF1        			JP		NZ,MERR
                      	
  F170  0680          			LD		B,80H
  F172  CD33F0        	MLH5:	CALL	RCVBYTE    ;読みだされたインフォメーションブロックを空受信
  F175  05            			DEC		B
  F176  20FA          			JR		NZ,MLH5
                      	
  F178  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F17B  A7            			AND		A          ;00以外ならERROR
  F17C  C2DAF1        			JP		NZ,MERR
                      	
  F17F  C3D5F1        			JP		MRET       ;正常RETURN
                      	
                      	
                      	;**************************** 04F8H MONITOR リード データ代替処理 ********************
  F182                	MLDAT:
  F182  F3            			DI
                      	;MZTファイル「ROPOKO.MZT」を選択
  F183  CD3BF1        			CALL	MLHED
  F186  CD0600        			CALL	LETLN
  F189  117FF0        			LD		DE,LDMSG   ;'LOADING '
  F18C  CD1500        			CALL	MSGPR        ;メッセージ表示
  F18F  11F110        			LD		DE,FNAME     ;ファイルネーム
  F192  CD1500        			CALL	MSGPR       ;メッセージ表示
                      	
                      	
  F195  D5            			PUSH	DE
  F196  C5            			PUSH	BC
  F197  E5            			PUSH	HL
  F198  3E94          			LD		A,94H      ;DATA LOADコマンド94H
  F19A  CDCEF1        			CALL	MCMD       ;コマンドコード送信
  F19D  A7            			AND		A          ;00以外ならERROR
  F19E  C2DAF1        			JP		NZ,MERR
                      	
  F1A1  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F1A4  A7            			AND		A          ;00以外ならERROR
  F1A5  C2DAF1        			JP		NZ,MERR
                      	
  F1A8  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F1AB  A7            			AND		A          ;00以外ならERROR
  F1AC  C2DAF1        			JP		NZ,MERR
                      	
  F1AF  110211        			LD		DE,FSIZE   ;FSIZE送信
  F1B2  1A            			LD		A,(DE)
  F1B3  CD46F0        			CALL	SNDBYTE
  F1B6  13            			INC		DE
  F1B7  1A            			LD		A,(DE)
  F1B8  CD46F0        			CALL	SNDBYTE
  F1BB  CD21F0        			CALL	DBRCV      ;FSIZE分のデータを受信し、SADRSから格納。分割ロードの場合、直前に0436HでOPENされたファイルを対象として256バイトずつSADRSが加算されて04F8HがCALLされる。
                      	
  F1BE  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F1C1  A7            			AND		A          ;00以外ならERROR
  F1C2  C2DAF1        			JP		NZ,MERR
                      	
  F1C5  180E          			JR		MRET       ;正常RETURN
                      	
                      	;************************** 0588H VRFY CMT ベリファイ代替処理 *******************
  F1C7                	MVRFY:
  F1C7  F3            			DI
  F1C8  D5            			PUSH	DE
  F1C9  C5            			PUSH	BC
  F1CA  E5            			PUSH	HL
  F1CB  C38C05        			JP	058CH
                      	
                      	;******* 代替処理用コマンドコード送信 (IN:A コマンドコード) **********
  F1CE                	MCMD:
  F1CE  CD46F0        			CALL	SNDBYTE    ;コマンドコード送信
  F1D1  CD33F0        			CALL	RCVBYTE    ;状態取得(00H=OK)
  F1D4  C9            			RET
                      	
                      	;****** 代替処理用正常RETURN処理 **********
  F1D5  E1            	MRET:	POP		HL
  F1D6  C1            			POP		BC
  F1D7  D1            			POP		DE
  F1D8  AF            			XOR		A          ;正常終了フラグ
                      			
  F1D9  C9            			RET
                      	
                      	;******* 代替処理用ERROR処理 **************
  F1DA                	MERR:
  F1DA  FEF0          			CP		0F0H
  F1DC  2005          			JR		NZ,MERR3
  F1DE  1188F0        			LD		DE,MSG_F0
  F1E1  180F          			JR		MERRMSG
                      			
  F1E3  FEF1          	MERR3:	CP		0F1H
  F1E5  2005          			JR		NZ,MERR99
  F1E7  11A1F0        			LD		DE,MSG_F1
  F1EA  1806          			JR		MERRMSG
                      			
  F1EC  CDC303        	MERR99:	CALL	PRTBYT
  F1EF  11AFF0        			LD		DE,MSG99
                      			
  F1F2                	MERRMSG:
  F1F2  CD1500        			CALL	MSGPR
  F1F5  CD0600        			CALL	LETLN
  F1F8  E1            			POP		HL
  F1F9  C1            			POP		BC
  F1FA  D1            			POP		DE
  F1FB  3E02          			LD		A,02H
  F1FD  37            			SCF
                      	
  F1FE  C9            			RET
                      	
  F1FF                				END
