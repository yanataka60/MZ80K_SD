			  Z80 ASSEMBLER - ZASM VER 1.6
  1088                	IBUFE		EQU		1088H
  1089                	FNAME		EQU		1089H
  109A                	FSIZE		EQU		109AH
  109C                	SADRS		EQU		109CH
  1108                	LBUF		EQU		1108H
                      	
                      	;0D8H PORTA 送信データ(下位4ビット)
                      	;0D9H PORTB 受信データ(8ビット)
                      	;
                      	;0DAH PORTC Bit
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;0DBH コントロールレジスタ
                      	
                      	
  2E00                			ORG		2E00H
                      	
  2E00  C9            			RET
                      			
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  2E01  3E8A          	INIT:	LD		A,8AH
  2E03  D3DB          			OUT		(0DBH),A
                      	;出力BITをリセット
  2E05  3E00          	INIT2:	LD		A,00H      ;PORTA <- 0
  2E07  D3D8          			OUT		(0D8H),A
  2E09  D3DA          			OUT		(0DAH),A   ;PORTC <- 0
  2E0B  C9            			RET
                      	
                      	;データ受信
  2E0C  ED5B9A10      	DBRCV:	LD		DE,(FSIZE)
  2E10  2A9C10        			LD		HL,(SADRS)
  2E13  CD1E2E        	DBRLOP:	CALL	RCVBYTE
  2E16  77            			LD		(HL),A
  2E17  1B            			DEC		DE
  2E18  7A            			LD		A,D
  2E19  B3            			OR		E
  2E1A  23            			INC		HL
  2E1B  20F6          			JR		NZ,DBRLOP   ;DE=0までLOOP
  2E1D  C9            			RET
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  2E1E                	RCVBYTE:
  2E1E  CD532E        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  2E21  3E05          			LD		A,05H
  2E23  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 1
  2E25  DBD9          			IN		A,(0D9h)   ;PORTB -> A
  2E27  F5            			PUSH 	AF
  2E28  CD5A2E        			CALL	F2CHK      ;PORTC BIT7が0になるまでLOOP
  2E2B  3E04          			LD		A,04H
  2E2D  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 0
  2E2F  F1            			POP 	AF
  2E30  C9            			RET
                      			
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  2E31                	SNDBYTE:
  2E31  F5            			PUSH	AF
  2E32  1F            			RRA
  2E33  1F            			RRA
  2E34  1F            			RRA
  2E35  1F            			RRA
  2E36  E60F          			AND		0FH
  2E38  CD422E        			CALL	SND4BIT
  2E3B  F1            			POP		AF
  2E3C  E60F          			AND		0FH
  2E3E  CD422E        			CALL	SND4BIT
  2E41  C9            			RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  2E42                	SND4BIT:
  2E42  D3D8          			OUT		(0D8H),A
  2E44  3E05          			LD		A,05H
  2E46  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 1
  2E48  CD532E        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  2E4B  3E04          			LD		A,04H
  2E4D  D3DB          			OUT		(0DBH),A    ;PORTC BIT2 <- 0
  2E4F  CD5A2E        			CALL	F2CHK
  2E52  C9            			RET
                      			
                      	;**** BUSYをCHECK(1) ****
                      	; 82H BIT7が1になるまでLOP
  2E53  DBDA          	F1CHK:	IN		A,(0DAH)
  2E55  E680          			AND		80H        ;PORTC BIT7 = 1?
  2E57  28FA          			JR		Z,F1CHK
  2E59  C9            			RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 82H BIT7が0になるまでLOOP
  2E5A  DBDA          	F2CHK:	IN		A,(0DAH)
  2E5C  E680          			AND		80H        ;PORTC BIT7 = 0?
  2E5E  20FA          			JR		NZ,F2CHK
  2E60  C9            			RET
                      	
                      	;*********************** 0436H MONITOR ライト インフォメーション代替処理 ************
  2E61                	MSHED:
  2E61  F3            			DI
  2E62  D5            			PUSH	DE
  2E63  C5            			PUSH	BC
  2E64  E5            			PUSH	HL
  2E65  3E91          			LD		A,91H      ;HEADER SAVEコマンド91H
  2E67  CD4A2F        			CALL	MCMD       ;コマンドコード送信
  2E6A  A7            			AND		A          ;00以外ならERROR
  2E6B  C25C2F        			JP		NZ,MERR
                      	
  2E6E  218810        			LD		HL,IBUFE
  2E71  0680          			LD		B,80H
  2E73  7E            	MSH1:	LD		A,(HL)     ;インフォメーション ブロック送信
  2E74  CD312E        			CALL	SNDBYTE
  2E77  23            			INC		HL
  2E78  05            			DEC		B
  2E79  20F8          			JR		NZ,MSH1
                      	
  2E7B  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2E7E  A7            			AND		A          ;00以外ならERROR
  2E7F  C25C2F        			JP		NZ,MERR
                      	
  2E82  C3562F        			JP		MRET       ;正常RETURN
                      	
                      	;******************** 0475H MONITOR ライト データ代替処理 **********************
  2E85                	MSDAT:
  2E85  F3            			DI
  2E86  D5            			PUSH	DE
  2E87  C5            			PUSH	BC
  2E88  E5            			PUSH	HL
  2E89  3E92          			LD		A,92H      ;DATA SAVEコマンド92H
  2E8B  CD4A2F        			CALL	MCMD       ;コマンドコード送信
  2E8E  A7            			AND		A          ;00以外ならERROR
  2E8F  C25C2F        			JP		NZ,MERR
                      	
  2E92  219A10        			LD		HL,FSIZE   ;FSIZE送信
  2E95  7E            			LD		A,(HL)
  2E96  CD312E        			CALL	SNDBYTE
  2E99  23            			INC		HL
  2E9A  7E            			LD		A,(HL)
  2E9B  CD312E        			CALL	SNDBYTE
                      	
  2E9E  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2EA1  A7            			AND		A          ;00以外ならERROR
  2EA2  C25C2F        			JP		NZ,MERR
                      	
  2EA5  ED5B9A10      			LD		DE,(FSIZE)
  2EA9  2A9C10        			LD		HL,(SADRS)
  2EAC  7E            	MSD1:	LD		A,(HL)
  2EAD  CD312E        			CALL	SNDBYTE      ;SADRSからFSIZE Byteを送信。分割セーブの場合、直前に0436HでOPENされたファイルを対象として256バイトずつ0475HがCALLされる。
  2EB0  1B            			DEC		DE
  2EB1  7A            			LD		A,D
  2EB2  B3            			OR		E
  2EB3  23            			INC		HL
  2EB4  20F6          			JR		NZ,MSD1
                      			
  2EB6  C3562F        			JP		MRET       ;正常RETURN
                      	
                      	;************************** 04D8H MONITOR リード インフォメーション代替処理 *****************
  2EB9                	MLHED:
  2EB9  F3            			DI
  2EBA  D5            			PUSH	DE
  2EBB  C5            			PUSH	BC
  2EBC  E5            			PUSH	HL
  2EBD  3E93          			LD		A,93H      ;HEADER LOADコマンド93H
  2EBF  CD4A2F        			CALL	MCMD       ;コマンドコード送信
  2EC2  A7            			AND		A          ;00以外ならERROR
  2EC3  C25C2F        			JP		NZ,MERR
                      	
                      			
  2EC6  118910        			LD		DE,FNAME
                      	
  2EC9  0610          	MLH2:	LD		B,10H
  2ECB  1A            	MLH4:	LD		A,(DE)     ;FNAME送信
  2ECC  CD312E        			CALL	SNDBYTE
  2ECF  13            			INC		DE
  2ED0  05            			DEC		B
  2ED1  20F8          			JR		NZ,MLH4
                      	
  2ED3  0611          			LD		B,11H
  2ED5  3E0D          	MLH3:	LD		A,0DH
  2ED7  CD312E        			CALL	SNDBYTE
  2EDA  05            			DEC		B
  2EDB  20F8          			JR		NZ,MLH3
                      	
  2EDD  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2EE0  A7            			AND		A          ;00以外ならERROR
  2EE1  C25C2F        			JP		NZ,MERR
                      	
  2EE4  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2EE7  A7            			AND		A          ;00以外ならERROR
  2EE8  C25C2F        			JP		NZ,MERR
                      	
  2EEB  218810        			LD		HL,IBUFE
  2EEE  0680          			LD		B,80H
  2EF0  CD1E2E        	MLH5:	CALL	RCVBYTE    ;読みだされたインフォメーションブロックを受信
  2EF3  77            			LD		(HL),A
  2EF4  23            			INC		HL
  2EF5  05            			DEC		B
  2EF6  20F8          			JR		NZ,MLH5
                      	
  2EF8  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2EFB  A7            			AND		A          ;00以外ならERROR
  2EFC  C25C2F        			JP		NZ,MERR
                      	
  2EFF  118810        			LD		DE,IBUFE
  2F02  210811        			LD		HL,LBUF
  2F05  0680          			LD		B,80H
  2F07  1A            	MLH6:	LD		A,(DE)
  2F08  77            			LD		(HL),A
  2F09  13            			INC		DE
  2F0A  23            			INC		HL
  2F0B  05            			DEC		B
  2F0C  20F9          			JR		NZ,MLH6
  2F0E  218810        			LD		HL,IBUFE
  2F11  7E            			LD		A,(HL)
                      	
  2F12  1842          			JR		MRET       ;正常RETURN
                      	
                      	;**************************** 04F8H MONITOR リード データ代替処理 ********************
  2F14                	MLDAT:
  2F14  F3            			DI
  2F15  D5            			PUSH	DE
  2F16  C5            			PUSH	BC
  2F17  E5            			PUSH	HL
  2F18  3E94          			LD		A,94H      ;DATA LOADコマンド94H
  2F1A  CD4A2F        			CALL	MCMD       ;コマンドコード送信
  2F1D  A7            			AND		A          ;00以外ならERROR
  2F1E  C25C2F        			JP		NZ,MERR
                      	
  2F21  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2F24  A7            			AND		A          ;00以外ならERROR
  2F25  C25C2F        			JP		NZ,MERR
                      	
  2F28  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2F2B  A7            			AND		A          ;00以外ならERROR
  2F2C  C25C2F        			JP		NZ,MERR
                      	
  2F2F  119A10        			LD		DE,FSIZE   ;FSIZE送信
  2F32  1A            			LD		A,(DE)
  2F33  CD312E        			CALL	SNDBYTE
  2F36  13            			INC		DE
  2F37  1A            			LD		A,(DE)
  2F38  CD312E        			CALL	SNDBYTE
  2F3B  CD0C2E        			CALL	DBRCV      ;FSIZE分のデータを受信し、SADRSから格納。分割ロードの場合、直前に0436HでOPENされたファイルを対象として256バイトずつSADRSが加算されて04F8HがCALLされる。
                      	
  2F3E  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2F41  A7            			AND		A          ;00以外ならERROR
  2F42  C25C2F        			JP		NZ,MERR
                      	
  2F45  180F          			JR		MRET       ;正常RETURN
                      	
                      	;************************** 0588H VRFY CMT ベリファイ代替処理 *******************
  2F47  AF            	MVRFY:	XOR		A          ;正常終了フラグ
  2F48  FB            			EI
  2F49  C9            			RET
                      	
                      	;******* 代替処理用コマンドコード送信 (IN:A コマンドコード) **********
  2F4A  F5            	MCMD:	PUSH	AF
  2F4B  CD012E        			CALL	INIT
  2F4E  F1            			POP		AF
  2F4F  CD312E        			CALL	SNDBYTE    ;コマンドコード送信
  2F52  CD1E2E        			CALL	RCVBYTE    ;状態取得(00H=OK)
  2F55  C9            			RET
                      	
                      	;****** 代替処理用正常RETURN処理 **********
  2F56  E1            	MRET:	POP		HL
  2F57  C1            			POP		BC
  2F58  D1            			POP		DE
  2F59  AF            			XOR		A
  2F5A  FB            			EI
  2F5B  C9            			RET
                      	
                      	;******* 代替処理用ERROR処理 **************
  2F5C                	MERR:
  2F5C  E1            			POP		HL
  2F5D  C1            			POP		BC
  2F5E  D1            			POP		DE
  2F5F  3E02          			LD		A,02H
  2F61  37            			SCF
  2F62  FB            			EI
  2F63  C9            			RET
                      			
  2F64                			END
